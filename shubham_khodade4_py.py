# -*- coding: utf-8 -*-
"""shubham_khodade4.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IRYQr2xGFg27DIfiyOJMaGD0tQbIufeA
"""

import pandas  as pd
import numpy as np

patient_data=pd.read_csv("/content/patient-data.csv")
print(patient_data)

patient_data.info()

patient_data.iloc[:,:]

patient_data["HeightInMeters"]=patient_data['HeightInCms']/100
print(patient_data)

patient_data["BMI"] =patient_data['WeightInKgs']  / patient_data['HeightInMeters']**2
print(patient_data)

patient_data["BMI Label"] = patient_data["BMI"].apply(lambda x: "Underweight" if x < 18.50 else"Normal")
patient_data["BMI Label"] = patient_data["BMI"].apply(lambda x: "Normal" if 18.5 <x>=25.0 else "Overweight")
patient_data["BMI Label"] = patient_data["BMI"].apply(lambda x: "Overweight" if 25.00<x >=30.00 else "Obese")
patient_data["BMI Label"] = patient_data["BMI"].apply(lambda x: "Obese" if  x>30.00 else "normal")
print(patient_data)

patient_data["HealthGrade"] = patient_data["HealthGrade"].replace(1, "Good health")
patient_data["HealthGrade"] = patient_data["HealthGrade"].replace(2, "Normal")
patient_data["HealthGrade"] = patient_data["HealthGrade"].replace(3, "Bad health")
patient_data

#1.	Display top 10 records based on BMI-Value.
patient_data["BMI"].head(10)

#2.Display bottom 10 records based on BMI-Value.
patient_data["BMI"].tail(10)

#3.	Provide frequency / counts of Gender > Race
frequency_gender=patient_data['Gender'].value_counts()
frequency_gender

frequency_race=patient_data['Race'].value_counts()
frequency_race

"""gender column has highest frequency count of females and according to race maximum frequency is white

"""

#4.Provide max, min and average values for BMI-Values as per following 	Race > Gender.
patient_data['BMI'].min()

patient_data['BMI'].max()

patient_data['BMI'].mean()

#5.	Display All Records for all people who are dead.
patient_data['Died'].value_counts()

"""true indicicates that the person is died and false indicates person is not died hence 54 has died

"""

patient_data = patient_data[patient_data['Died'].isin([False])]
patient_data

# 6.	Display All Records for â€œHispanic Females
Hispanic_Females = patient_data[patient_data['Gender'].isin(["Female"]) & patient_data['Race'].isin(["Hispanic"])]
Hispanic_Females

7.	#Provide 7 sample records from the Dataset. Use seed(707)
patient_data = patient_data.sample(n=7)
patient_data